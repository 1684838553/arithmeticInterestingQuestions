/**
 * 整数转换。编写一个函数，确定需要改变几个位才能将整数A转成整数B。

    示例1:

    输入：A = 29 （或者0b11101）, B = 15（或者0b01111）
    输出：2
    示例2:

    输入：A = 1，B = 2
    输出：2

    解题思路:
    n = A ^ B，可以得到A和B有哪几位是不同的，即n二进制1的个数，就是A和B有几位不同的数量
    n = n & (n - 1)可以去掉n二进制的最右边的一个1，可以用来统计1的数量
    那么1的数量就是答案

*/
const convertInteger = (A, B) => {
  // 只有两个位相异结果才为 1
  let n = A ^ B;
  let count = 0;
  while (n) {
    //n = n & (n - 1)可以去掉n二进制的最右边的一个1，可以用来统计1的数量
    n = n & (n - 1);
    count++;
  }
  return count;
};
